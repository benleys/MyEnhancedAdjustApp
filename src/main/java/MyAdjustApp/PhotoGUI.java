/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MyAdjustApp;

import boofcv.abst.filter.blur.BlurFilter;
import boofcv.alg.filter.blur.BlurImageOps;
import boofcv.alg.filter.blur.GBlurImageOps;
import boofcv.factory.filter.blur.FactoryBlurFilter;
import boofcv.gui.BoofSwingUtil;
import boofcv.io.image.ConvertBufferedImage;
import boofcv.io.image.UtilImageIO;
import boofcv.struct.image.GrayU8;
import boofcv.struct.image.ImageType;
import boofcv.struct.image.Planar;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author Medion
 */
public class PhotoGUI extends javax.swing.JFrame {
    //Get file and display
    private File file;
    private BufferedImage buffered;
    private BufferedImage resetData;
    private ImageIcon imageIcon;
    private Image image;
    //Init (also for blur)
    private Planar<GrayU8> fileConverted;
    private Planar<GrayU8> input;
    //Check if at least one option is selected before image is saved to desktop
    private boolean checkOptions = false;
    //Size of the blur kernel. square region with a width of radius*2 + 1
    private final int radius = 8;

    /**
     * Creates new form PhotoGUI
     */
    public PhotoGUI() {
        // Initialise GUI
        initComponents();
        // GUI in center of screen
        this.setLocationRelativeTo(null);
    }
    
    public void displayImage() {
        //Reset everything
        if(checkOptions == false){
            //Display adjusted image on JLabel
            imageIcon = new ImageIcon(resetData);
        //Display adjustment(s)
        } else {
            //Display image on JLabel
            imageIcon = new ImageIcon(buffered);
        }
        //Fit image to JLabel
        image = imageIcon.getImage().getScaledInstance(jLabelImage.getWidth(), jLabelImage.getHeight(), Image.SCALE_SMOOTH);
        jLabelImage.setIcon(new ImageIcon(image));
    }
    
    public void displayImageAfterBlurAdjust() {
        //Convert from BufferedImage to display
        buffered = ConvertBufferedImage.convertTo(input, null, true);

        //Display to GUI
        displayImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabelImage = new javax.swing.JLabel();
        jButtonBrowseImage = new javax.swing.JButton();
        jButtonSaveImage = new javax.swing.JButton();
        jRadioButtonGaussian = new javax.swing.JRadioButton();
        jLabelBlurOptions = new javax.swing.JLabel();
        jRadioButtonMedian = new javax.swing.JRadioButton();
        jRadioButtonMean = new javax.swing.JRadioButton();
        jCheckBoxDenoise = new javax.swing.JCheckBox();
        jLabelThresholdOptions = new javax.swing.JLabel();
        jComboBoxThreshold = new javax.swing.JComboBox<>();
        jTextFieldSaveName = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jButtonReset = new javax.swing.JButton();
        jCheckBoxNoisy = new javax.swing.JCheckBox();
        jLabelThresholdOptions1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonBrowseImage.setText("Browse Image");
        jButtonBrowseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseImageActionPerformed(evt);
            }
        });

        jButtonSaveImage.setText("Save Image");
        jButtonSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveImageActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonGaussian);
        jRadioButtonGaussian.setText("Gaussian");
        jRadioButtonGaussian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonGaussianMouseClicked(evt);
            }
        });

        jLabelBlurOptions.setText("Blur Options:");

        buttonGroup1.add(jRadioButtonMedian);
        jRadioButtonMedian.setText("Median");
        jRadioButtonMedian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonMedianMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRadioButtonMean);
        jRadioButtonMean.setText("Mean");
        jRadioButtonMean.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonMeanMouseClicked(evt);
            }
        });
        jRadioButtonMean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMeanActionPerformed(evt);
            }
        });

        jCheckBoxDenoise.setText("Denoise");
        jCheckBoxDenoise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxDenoiseMouseClicked(evt);
            }
        });

        jLabelThresholdOptions.setText("Threshold Options:");

        jComboBoxThreshold.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gaussian", "Mean", "Niblack", "Wolf", "Min-Max" }));
        jComboBoxThreshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxThresholdActionPerformed(evt);
            }
        });

        jLabelName.setText("Filename:");

        jButtonReset.setText("Reset");
        jButtonReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonResetMouseClicked(evt);
            }
        });

        jCheckBoxNoisy.setText("Noisy");
        jCheckBoxNoisy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxNoisyMouseClicked(evt);
            }
        });

        jLabelThresholdOptions1.setText("Noise Options:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addComponent(jButtonBrowseImage)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jTextFieldSaveName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonGaussian, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRadioButtonMean, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelBlurOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelThresholdOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jRadioButtonMedian, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelThresholdOptions1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonReset)
                                    .addComponent(jCheckBoxNoisy, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxDenoise, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSaveImage, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButtonBrowseImage)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSaveName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelThresholdOptions)
                        .addComponent(jLabelBlurOptions))
                    .addComponent(jLabelThresholdOptions1))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxDenoise)
                            .addComponent(jCheckBoxNoisy))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSaveImage)
                            .addComponent(jButtonReset))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButtonGaussian)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonMean))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonMedian)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBrowseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseImageActionPerformed
        //Get image with FileChooser
        file = BoofSwingUtil.fileChooser(null, null, true, ".", null, BoofSwingUtil.FileTypes.IMAGES);
        buffered = UtilImageIO.loadImageNotNull(file.getAbsolutePath());
        
        //Data to reset everything
        resetData = buffered;

        //init
        fileConverted = ConvertBufferedImage.convertFrom(buffered, true, ImageType.pl(3, GrayU8.class));
        input = fileConverted.createSameShape();
        //System.out.println(buffered);
        
        //Display image in GUI
        displayImage();
    }//GEN-LAST:event_jButtonBrowseImageActionPerformed

    private void jButtonSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveImageActionPerformed
        try {
            if (file != null) {
                String outputName = jTextFieldSaveName.getText();
                String outputExtension = FilenameUtils.getExtension(file.getAbsolutePath().toLowerCase());
                if (checkOptions == true) {
                    if (!outputName.isEmpty()) {
                        //Write image to dekstop
                        ImageIO.write(buffered, outputExtension, new File("C:/Dev/Erasmus CODE/Java Advanced/NetBeansProjects/MyAdjustApp/app/src/main/java/MyAdjustApp/images/" + outputName + "." + outputExtension));                     
                        JOptionPane.showMessageDialog(rootPane, "Image saved!");
                        
                        //Open and show on desktop
                        Desktop desktop = Desktop.getDesktop();
                        desktop.open(new File("C:/Dev/Erasmus CODE/Java Advanced/NetBeansProjects/MyAdjustApp/app/src/main/java/MyAdjustApp/images/" + outputName + "." + outputExtension));
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Give a name to the file in the inputfield");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "You need to use at least one of the options");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "You need to select an image first");
            }
        } catch (IOException ex) {
            Logger.getLogger(PhotoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSaveImageActionPerformed

    private void jRadioButtonGaussianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonGaussianMouseClicked
        checkOptions = true;
        //Apply gaussian blur
        GBlurImageOps.gaussian(fileConverted, input, -1, radius, null);

        //Display image in GUI after blur filter
        displayImageAfterBlurAdjust();
    }//GEN-LAST:event_jRadioButtonGaussianMouseClicked

    private void jRadioButtonMedianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonMedianMouseClicked
        checkOptions = true;        
        //Apply median blur
        BlurImageOps.median(fileConverted, input, radius, radius, null);

        //Display image in GUI after blur filter
        displayImageAfterBlurAdjust();
    }//GEN-LAST:event_jRadioButtonMedianMouseClicked

    private void jRadioButtonMeanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonMeanMouseClicked
        checkOptions = true;
        //Apply mean blur
        BlurFilter<Planar<GrayU8>> filterMean = FactoryBlurFilter.mean(fileConverted.getImageType(), radius);
        filterMean.process(fileConverted, input);

        //Display image in GUI after blur filter
        displayImageAfterBlurAdjust();
    }//GEN-LAST:event_jRadioButtonMeanMouseClicked

    private void jButtonResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonResetMouseClicked
        checkOptions = false;
        
        //Unselect all
        buttonGroup1.clearSelection();

        //Display image in GUI
        displayImage();
    }//GEN-LAST:event_jButtonResetMouseClicked

    private void jComboBoxThresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxThresholdActionPerformed

    }//GEN-LAST:event_jComboBoxThresholdActionPerformed

    private void jCheckBoxNoisyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxNoisyMouseClicked

    }//GEN-LAST:event_jCheckBoxNoisyMouseClicked

    private void jCheckBoxDenoiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxDenoiseMouseClicked

    }//GEN-LAST:event_jCheckBoxDenoiseMouseClicked

    private void jRadioButtonMeanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMeanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMeanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhotoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhotoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhotoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhotoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhotoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonBrowseImage;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSaveImage;
    private javax.swing.JCheckBox jCheckBoxDenoise;
    private javax.swing.JCheckBox jCheckBoxNoisy;
    private javax.swing.JComboBox<String> jComboBoxThreshold;
    private javax.swing.JLabel jLabelBlurOptions;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelThresholdOptions;
    private javax.swing.JLabel jLabelThresholdOptions1;
    private javax.swing.JRadioButton jRadioButtonGaussian;
    private javax.swing.JRadioButton jRadioButtonMean;
    private javax.swing.JRadioButton jRadioButtonMedian;
    private javax.swing.JTextField jTextFieldSaveName;
    // End of variables declaration//GEN-END:variables
}
